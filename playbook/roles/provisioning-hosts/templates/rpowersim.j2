#!/bin/sh
# Copyright International Business Machines Corp. 2012

#-------------------------------------------------------------------------------
#=head1  simulate for rpower and it will be used by VM
#=cut
#-------------------------------------------------------------------------------

HOSTNAMES=$1
OPS=$2
CONFIG_FILE="/tmp/vmpatch.cfg"

VMID=-1
VMNAME=""
HPVSERVER=""

if [ x"$HOSTNAMES" == x ]; then
    echo "Error: Invalid nodes and/or groups in noderange."
    exit 1
fi

if [ $OPS != "on" -a $OPS != "off" -a $OPS != "softoff" -a $OPS != "reset" -a $OPS != "stat" ]; then
    echo "Error: Invalid operations on nodes."
    exit 1
fi

HOSTNAMES=${HOSTNAMES//,/ }

for HOSTNAME in $HOSTNAMES
do
    #try to get the VM NAME
    raw=`cat ${CONFIG_FILE} | grep $HOSTNAME | awk -F' ' '{print $2}' | wc -l`
    if [ $? -eq 0 ]; then  
        if [ $raw == "1" ]; then
            VMNAME=`cat ${CONFIG_FILE} | grep $HOSTNAME | awk -F' ' '{print $2}'`
        else
            echo "Error: Failed to get $HOSTNAME's VM Host Name."
        fi
    else
        echo "Error: Failed to get $HOSTNAME's VM Host Name."
    fi

    #try to get the VM's Hypervisor IP address
    raw=`cat ${CONFIG_FILE} | grep $HOSTNAME | awk -F' ' '{print $3}' | wc -l`
    if [ $? -eq 0 ]; then  
        if [ $raw == "1" ]; then
            HPVSERVER=`cat ${CONFIG_FILE} | grep $HOSTNAME | awk -F' ' '{print $3}'`
        else
            echo "Error: Failed to get $HOSTNAME's Hypervisor's IP address."
        fi
    else
        echo "Error: Failed to get $HOSTNAME's Hypervisor's IP address."
    fi

    #try to get the vmid
    raw=`ssh $HPVSERVER "vim-cmd vmsvc/getallvms | grep $VMNAME"`
    if [ $? -eq 0 ]; then  
        vmid=`echo $raw | awk -F' '  '{print $1}'`
        if [ x"$vmid" != x ]; then
            VMID=$vmid
        else
            echo "Error: Failed to get VM's VMID"
        fi 
    else
        echo "Error: Failed to get VM's VMID"
    fi

    randend=$RANDOM

    if [ $OPS == "on" ]; then
        `ssh $HPVSERVER "vim-cmd vmsvc/power.on $VMID" > /tmp/vmwarerpowersim_$randend 2>&1`
        ret=`cat /tmp/vmwarerpowersim_$randend | grep -E 'failed|NotFound'`
        if [ x"$ret" == x ]; then
            echo "$HOSTNAME: on"
        else
            echo "Error: power on $HOSTNAME failed."
        fi
    elif [ $OPS == "off" ]; then
        `ssh $HPVSERVER "vim-cmd vmsvc/power.off $VMID" > /tmp/vmwarerpowersim_$randend 2>&1`
        ret=`cat /tmp/vmwarerpowersim_$randend | grep -E 'failed|NotFound'`
        if [ x"$ret" == x ]; then
            echo "$HOSTNAME: off"
        else
            echo "Error: power off $HOSTNAME failed."
        fi
    elif [ $OPS == "reset" ]; then
        `ssh $HPVSERVER "vim-cmd vmsvc/power.reset $VMID" > /tmp/vmwarerpowersim_$randend 2>&1`
        ret=`cat /tmp/vmwarerpowersim_$randend | grep -E 'failed|NotFound'`
        if [ x"$ret" == x ]; then
            echo "$HOSTNAME: reset"
        else
            echo "Error: power reset $HOSTNAME failed."
        fi
    elif [ $OPS == "softoff" ]; then
        `ssh $HPVSERVER "vim-cmd vmsvc/power.shutdown $VMID" > /tmp/vmwarerpowersim_$randend 2>&1`
        ret=`cat /tmp/vmwarerpowersim_$randend | grep -E 'failed|NotFound'`
        if [ x"$ret" == x ]; then
            echo "$HOSTNAME: softoff"
        else
            echo "Error: power soft $HOSTNAME failed."
        fi
    elif [ $OPS == "stat" ]; then
        unknown_flag="Y"
        `ssh $HPVSERVER "vim-cmd vmsvc/power.getstate $VMID" > /tmp/vmwarerpowersim_$randend 2>&1`
        ret=`cat /tmp/vmwarerpowersim_$randend | grep -E 'failed|NotFound'`
        if [ x"$ret" == x ]; then
            stat=`cat /tmp/vmwarerpowersim_$randend | grep 'Powered off'`
            if [ "$stat" == "Powered off" ]; then
                echo "$HOSTNAME: off"
                unknown_flag="N"
                fi

            stat=`cat /tmp/vmwarerpowersim_$randend | grep 'Powered on'`
            if [ "$stat" == "Powered on" ]; then
                echo "$HOSTNAME: on"
                unknown_flag="N"
            fi

            if [ "$unknown_flag" == "Y"  ]; then
                echo "Error: power state $HOSTNAME failed."
            fi 
        else
            echo "Error: power state $HOSTNAME failed."
        fi
    fi

    #delete the temp file
    `rm -rf /tmp/vmwarerpowersim_$randend 1>/dev/null 2>/dev/null`
done

exit 0
