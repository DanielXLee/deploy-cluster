---

- name: Defination nodes
  shell: |
    lsdef {{ item.key }} 2> /dev/null
    if [[ "$?" != "0" ]]; then
      mkdef -t node {{ item.key }} groups={{ item.value.groups }} netboot={{ item.value.netboot }} ip={{ item.value.ip }} installnic={{ item.value.installnic }} primarynic={{ item.value.installnic }} mac={{ item.value.mac }}
    fi
  with_dict: "{{ addnodes }}"
  notify: Setup hosts
  tags: addnodes

- name: Remove nodes
  shell: |
    lsdef {{ item }} 2> /dev/null
    [[ "$?" == "0" ]] && rmdef {{ item }} || exit 0
  with_items: "{{ rmnodes }}"
  tags: rmnodes

- name: Force setup network for next reboot
  command: resetboot {{ item.key }} privision
  with_dict: "{{ addnodes }}"
  tags: addnodes

- name: Initialize the Compute for Deployment
  command: nodeset {{ item.key }} osimage={{ item.value.osimage }}
  with_dict: "{{ addnodes }}"
  tags: addnodes

# - name: Apply VM patch when VM provisioning
#   include: apply-vm-patch.yml
#   when: VM_PROVISION

# - name: Boot the nodes
#   command: rpowersim {{ item.key }} on
#   with_dict: "{{ nodes }}"
#   when: VM_PROVISION
